apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app-green
  labels:
    app: messaging-app
    version: green
spec:
  replicas: 2
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: messaging-app
      version: green
  template:
    metadata:
      labels:
        app: messaging-app
        version: green
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: messaging-app-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - messaging-app
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: messaging-app
        image: collekta/messaging-app:1.1.0  # Updated version
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        envFrom:
        - secretRef:
            name: messaging-app-secrets
        env:
        - name: DJANGO_SETTINGS_MODULE
          value: "messaging_app.settings.production"
        - name: DATABASE_URL
          value: "postgresql://$(DB_USER):$(DB_PASSWORD)@db-service:5432/$(DB_NAME)"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: DJANGO_DEBUG
          value: "false"
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          failureThreshold: 30
          periodSeconds: 10
        volumeMounts:
        - name: static-files
          mountPath: /app/staticfiles
          readOnly: true
        - name: media-files
          mountPath: /app/media
      volumes:
      - name: static-files
        persistentVolumeClaim:
          claimName: static-files-pvc
      - name: media-files
        persistentVolumeClaim:
          claimName: media-files-pvc
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "messaging-app"
        effect: "NoSchedule"